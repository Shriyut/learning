provider "google" {
 credentials = "${file("credentials.json")}"
 project     = "cloudglobaldelivery-1000135575"
 region      = "us-central1"
}
resource "google_compute_network" "private_sql_network" {
  provider = "google"
  name       = "private-sql-network"
  auto_create_subnetworks = "false"
}
resource "google_compute_subnetwork" "subnet1" {
  name          = "private-sql-network-subnet"
  ip_cidr_range = "10.1.1.0/24"
  network       = "private-sql-network"
  depends_on    = ["google_compute_network.private_sql_network"]
  region        = "us-central1"
  private_ip_google_access = true
}
resource "google_compute_global_address" "private_sql_ip_address" {
  provider = "google"
  name          = "private-sql-ip-address"
  purpose       = "VPC_PEERING"
  address_type = "INTERNAL"
  prefix_length = 16
  network       = "${google_compute_network.private_sql_network.self_link}"
}

resource "google_service_networking_connection" "private_sql_vpc_connection" {
  provider = "google"
  network       = "${google_compute_network.private_sql_network.self_link}"
  service       = "servicenetworking.googleapis.com"
  reserved_peering_ranges = ["${google_compute_global_address.private_sql_ip_address.name}"]
}
resource "random_id" "db_name_suffix" {
  byte_length = 4
}


resource "google_sql_database_instance" "instance" {
  provider = "google"
  name = "private-instance-${random_id.db_name_suffix.hex}"
  region = "us-central1"
  depends_on = [
    "google_service_networking_connection.private_sql_vpc_connection"
  ]
  settings {
    tier = "db-f1-micro"
    ip_configuration {
      ipv4_enabled = true
      private_network = "${google_compute_network.private_sql_network.self_link}"
       authorized_networks {
        value = "${google_compute_address.reserveip.address}/32"
        name  = "private-sql-network"
      }
     authorized_networks {
         value = "${google_compute_address.reserveipt.address}/32"
                  }
      
    authorized_networks {
          value = "${google_compute_address.reserveipo.address}/32"
      }
    }
  }
}

resource "google_compute_address" "reserveip" {
  name   = "reserveip"
  region = "us-central1"
}
resource "google_compute_instance" "default" {
  name         = "a-sql-test"
  machine_type = "n1-standard-1"
  zone         = "us-central1-c"
  tags         = ["foo", "bar"]
  boot_disk {
    initialize_params {
      image = "centos-7-v20190905"
    }
  }

  network_interface {

    network    = "${google_compute_network.private_sql_network.self_link}"
    subnetwork = "${google_compute_subnetwork.subnet1.self_link}"
    access_config {
      nat_ip       = "${google_compute_address.reserveip.address}"
      network_tier = "PREMIUM"
    }
  }

  metadata = {
    foo = "bar"
  }
}

resource "google_compute_address" "reserveipt" {
  name   = "reserveipt"
  region = "us-central1"
}
resource "google_compute_instance" "defaultt" {
  name         = "a-sql-test-2"
  machine_type = "n1-standard-1"
  zone         = "us-central1-c"
  tags         = ["foo", "bar"]
  boot_disk {
    initialize_params {
      image = "centos-7-v20190905"
    }
  }

  network_interface {

    network    = "${google_compute_network.private_sql_network.self_link}"
    subnetwork = "${google_compute_subnetwork.subnet1.self_link}"
    access_config {
      nat_ip       = "${google_compute_address.reserveipt.address}"
      network_tier = "PREMIUM"
    }
  }

  metadata = {
    foo = "bar"
  }
}

resource "google_compute_address" "reserveipo" {
  name   = "reserveipo"
  region = "us-central1"
}
resource "google_compute_instance" "defaulto" {
  name         = "a-sql-test-3"
  machine_type = "n1-standard-1"
  zone         = "us-central1-c"
  tags         = ["foo", "bar"]
  boot_disk {
    initialize_params {
      image = "centos-7-v20190905"
    }
  }

  network_interface {

    network    = "${google_compute_network.private_sql_network.self_link}"
    subnetwork = "${google_compute_subnetwork.subnet1.self_link}"
    access_config {
      nat_ip       = "${google_compute_address.reserveipo.address}"
      network_tier = "PREMIUM"
    }
  }

  metadata = {
    foo = "bar"
  }
}

resource "google_bigquery_dataset" "dataset" {
  dataset_id                  ="bqdatasetid"
  friendly_name               = "bqfriendlyname"
  description                 = "Created via Terraform"
  location                    = "US"
 // default_table_expiration_ms = 3600000

  labels = {
    env = "default"
  }

  access {
    role          = "OWNER"
    user_by_email = "shriyut.jha@cognizant.com"
  }
  access {
    role   = "READER"
    domain = "cognizant.com"
  }
}



resource "google_storage_bucket" "an-example-1112233343" {
  name     = "an-example-1112233343"
  location = "US"
  storage_class = "MULTI_REGIONAL"
}
